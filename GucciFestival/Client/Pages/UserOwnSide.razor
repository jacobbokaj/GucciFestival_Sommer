
@page "/userownSide"
@using GucciFestival.Client.Services
@using GucciFestival.Shared.Models

<h3>UserOwnSide</h3>
<button>CheckOut</button>
<button>CheckOut</button>
<button>CheckOut</button>
@if(shifts.Count == 0){

}
else
{
    
<table class="table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in shifts)
            {
                <tr>
                    <td>@forecast.Name</td>
                    <td>@(competences)forecast.Competence_id</td>
                    <button @onclick="(() => SetShiftTagen(forecast))"></button>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    enum Sides{
        AvailableShifts,
        OwnShifts,
        Read
    }

    private bool takenFlag;

    private User userTagen = new User();
    private Shift shiftTagen = new Shift();
    private List<Shift> shifts = new List<Shift>();
    private Competences competences;

    [Inject]
    public IShiftService ShiftService { get; set; }
    protected override async Task OnInitializedAsync()
    {
        shifts = (await ShiftService.GetAllShifts()).ToList();
    }

    private void SetShiftTagen(Shift shift)
    {
        shiftTagen = shift;
    }

}
